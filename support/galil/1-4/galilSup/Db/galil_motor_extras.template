# $File: //ASP/Dev/SBS/4_Controls/4_3_Network_Infrastructure/4_3_1_Comms_Common_Services/sw/device_drivers/Galil/1-4/galilSup/Db/galil_motor_extras.template $
# $Revision: #18 $
# $DateTime: 2011/07/13 13:27:29 $
# $Author: cliftm $
#
# Description
# Template file for motor extra commands/readbacks, that are additional to motor Record functionality
#
# Copyright (c) 2006  Australian Synchrotron
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# Licence as published by the Free Software Foundation; either
# version 2.1 of the Licence, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public Licence for more details.
#
# You should have received a copy of the GNU Lesser General Public
# Licence along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Contact details:
# mark.clift@synchrotron.org.au
# 800 Blackburn Road, Clayton, Victoria 3168, Australia.
#

# Gear ratio set/monitor records
#
record(ai,"$(KitName):$(MotorName)_GR_MONITOR")
{
	field(DESC,"Axis gear ratio monitor")
	field(PINI,"YES")
	field(PREC,"$(PREC)")
	field(DTYP,"G21X3")
	field(INP, "#C$(C) S$(S) @GR")
}

record(ai,"$(KitName):$(MotorName)_SCONN_MONITOR")
{
	field(DESC,"SSI connection monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(FLNK,"$(KitName):$(MotorName)_SCONN_STATUS.PROC")
	field(INP, "#C$(C) S$(S) @SCONN")
}

record(ai,"$(KitName):$(MotorName)_ESTALL_MONITOR")
{
	field(DESC,"Encoder stall monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(FLNK,"$(KitName):$(MotorName)_ESTALL_STATUS.PROC")
	field(INP, "#C$(C) S$(S) @ESTALL")
}

record(ai,"$(KitName):$(MotorName)_UEVALID_MONITOR")
{
	field(DESC,"User encoder valid")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(FLNK,"$(KitName):$(MotorName)_UEVALID_STATUS.PROC")
	field(INP, "#C$(C) S$(S) @UEVALID")
}

record(ai,"$(KitName):$(MotorName)_UERAW_MONITOR")
{
	field(DESC,"User encoder raw reading")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(INP, "#C$(C) S$(S) @UERAW")
}

record(ai,"$(KitName):$(MotorName)_UEDIAL_MONITOR")
{
	field(DESC,"User encoder dial reading")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @UEDIAL")
}

record(ai,"$(KitName):$(MotorName)_UEUSER_MONITOR")
{
	field(DESC,"User encoder user reading")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @UEUSER")
}

record(ai,"$(KitName):$(MotorName)_UESTATE_MONITOR")
{
	field(DESC,"User encoder state")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(FLNK,"$(KitName):$(MotorName)_UESTATE_STATUS.PROC")
	field(INP, "#C$(C) S$(S) @UESTATE")
}

record(ai,"$(KitName):$(MotorName)_NERAW_MONITOR")
{
	field(DESC,"Encoder raw monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(INP, "#C$(C) S$(S) @NERAW")
}

record(ai,"$(KitName):$(MotorName)_NEDIAL_MONITOR")
{
	field(DESC,"Encoder dial monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @NEDIAL")
}

record(ai,"$(KitName):$(MotorName)_NEUSER_MONITOR")
{
	field(DESC,"Encoder user monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @NEUSER")
}

record(ai,"$(KitName):$(MotorName)_MTRSTOP_MONITOR")
{
	field(DESC,"Motor stop monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @MTRSTOP")
	field(FLNK,"$(KitName):$(MotorName)_MTRSTOP_STATUS")
}

record(ai,"$(KitName):$(MotorName)_STEPSMOOTH_MONITOR")
{
	field(DESC,"Step smoothing")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @STEPSMOOTH")
}

record(ai,"$(KitName):$(MotorName)_POSMAXERR_MONITOR")
{
	field(DESC,"Pos main mxerr")
	field(PINI,"YES")
	field(EGU, "$(EGU)")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @POSMAXERR")
}

record(ai,"$(KitName):$(MotorName)_POSMINERR_MONITOR")
{
	field(DESC,"Pos main mnerr")
	field(PINI,"YES")
	field(EGU, "$(EGU)")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @POSMINERR")
}

record(bi,"$(KitName):$(MotorName)_MTRSTOP_STATUS")
{
	field(DESC, "Mtr stop status")
	field(ZNAM, "Off")
   	field(ZSV,  "NO_ALARM")

  	field(ONAM, "On")
  	field(OSV,  "MAJOR")

   	field(INP,  "$(KitName):$(MotorName)_MTRSTOP_MONITOR")
}

record(ai,"$(KitName):$(MotorName)_ON_MONITOR")
{
	field(DESC,"Mtr on monitor")
	field(PINI,"YES")
	field(DTYP,"G21X3")
	field(SCAN,"$(SCAN)")
	field(PREC,"$(PREC)")
	field(EGU, "$(EGU)")
	field(INP, "#C$(C) S$(S) @MTRON")
	field(FLNK,"$(KitName):$(MotorName)_ON_STATUS")
}

record(ai,"$(KitName):$(MotorName)_MCONN_MONITOR")
{
	field(DESC, "Connect mon")
	field(DTYP, "G21X3")
	field(PINI, "YES")
	field(SCAN, "$(SCAN)")
	field(INP,  "#C$(C) S$(S) @MCONN")
	field(FLNK, "$(KitName):$(MotorName)_MCONN_STATUS")
}

record(bi,"$(KitName):$(MotorName)_ON_STATUS")
{
	field(DESC, "Mtr on status")
	field(ZNAM, "Off")
   	field(ZSV,  "MINOR")

  	field(ONAM, "On")
  	field(OSV,  "NO_ALARM")

   	field(INP,  "$(KitName):$(MotorName)_ON_MONITOR")
}

record(bi,"$(KitName):$(MotorName)_SCONN_STATUS")
{
	field(DESC, "SSI connection status")
	field(ZNAM, "Disconnected")
   	field(ZSV,  "MAJOR")

  	field(ONAM, "Connected")
  	field(OSV,  "NO_ALARM")

   	field(INP,  "$(KitName):$(MotorName)_SCONN_MONITOR")
}

record(bi,"$(KitName):$(MotorName)_ESTALL_STATUS")
{
	field(DESC, "Encoder stall status")
	field(ZNAM, "Working Ok")
   	field(ZSV,  "NO_ALARM")

  	field(ONAM, "Stalled")
  	field(OSV,  "MAJOR")

   	field(INP,  "$(KitName):$(MotorName)_ESTALL_MONITOR")
}

record(bi,"$(KitName):$(MotorName)_UEVALID_STATUS")
{
	field(DESC, "User encoder valid status")
	field(ZNAM, "Invalid")
   	field(ZSV,  "MAJOR")

  	field(ONAM, "Valid")
  	field(OSV,  "NO_ALARM")

   	field(INP,  "$(KitName):$(MotorName)_UEVALID_MONITOR")
}

record(bi,"$(KitName):$(MotorName)_UESTATE_STATUS")
{
	field(DESC, "User encoder on/off state")
	field(ZNAM, "Off")
   	field(ZSV,  "MAJOR")

  	field(ONAM, "On")
  	field(OSV,  "NO_ALARM")

   	field(INP,  "$(KitName):$(MotorName)_UESTATE_MONITOR")
}

record(bi,"$(KitName):$(MotorName)_MCONN_STATUS")
{
	field(DESC, "Connect stat")
	field(SCAN, "Passive")
	field(ZNAM, "Not Connected")
	field(ZSV,  "MINOR")
	field(ONAM, "Connected")
	field(OSV,  "NO_ALARM")
	field(INP,  "$(KitName):$(MotorName)_MCONN_MONITOR")
}

record(ao,"$(KitName):$(MotorName)_GR_SP")
{
	field(DESC,"Axis gear ratio setpoint")
	field(DTYP,"G21X3")
	field(OMSL,"supervisory")
	field(PREC,"$(PREC)") 
	field(DOL, "$(KitName):$(MotorName)_GR_SP")
        field(OUT, "#C$(C) S$(S) @GR")
	field(FLNK,"$(KitName):$(MotorName)_GR_MONITOR")
}

record(ao,"$(KitName):$(MotorName)_JOG_SP")
{
	field(DESC,"Axis jog setpoint")
	field(DTYP,"G21X3")
	field(OMSL,"supervisory")
	field(PREC,"$(PREC)")
	field(DOL, "$(KitName):$(MotorName)_JOG_SP")
        field(OUT, "#C$(C) S$(S) @JOG")
}

record(ao,"$(KitName):$(MotorName)_UEVALIDATE_SP")
{
	field(DESC,"Validate user encoder")
	field(DTYP,"G21X3")
	field(OMSL,"closed_loop")
	field(DOL, "$(KitName):$(MotorName)_UEVALIDATE_CMD")
        field(OUT, "#C$(C) S$(S) @UEVALIDATE")
}

record(bo,"$(KitName):$(MotorName)_UEVALIDATE_CMD")
{
	field(DESC,"Validate user encoder")
	field(ZNAM,"Off")
	field(ZSV, "NO_ALARM")
	field(ONAM,"Validate")
	field(OSV, "NO_ALARM")
	field(HIGH,"1")
	field(FLNK,"$(KitName):$(MotorName)_UEVALIDATE_SP")
}

record(ao,"$(KitName):$(MotorName)_UESTATE_SP")
{
	field(DESC,"User encoder state")
	field(DTYP,"G21X3")
        field(OMSL,"closed_loop")
	field(DOL, "$(KitName):$(MotorName)_UESTATE_CMD")
	field(OUT, "#C$(C) S$(S) @UESTATE")
}

record(bo,"$(KitName):$(MotorName)_UESTATE_CMD")
{
	field(DESC,"User encoder")
	field(ZNAM,"Off")
	field(ZSV, "MINOR")
	field(ONAM,"On")
	field(OSV, "NO_ALARM")
	field(FLNK,"$(KitName):$(MotorName)_UESTATE_SP")
}

record(ao,"$(KitName):$(MotorName)_MTRSTOP_SP")
{
	field(DESC,"Motor stop")
	field(DTYP,"G21X3")
        field(OMSL,"closed_loop")
	field(DOL, "$(KitName):$(MotorName)_MTRSTOP_CMD")
	field(OUT, "#C$(C) S$(S) @MTRSTOP")
}

record(bo,"$(KitName):$(MotorName)_MTRSTOP_CMD")
{
	field(DESC,"Motor Stop Mode")
	field(ZNAM,"Off")
	field(ZSV, "NO_ALARM")
	field(ONAM,"On")
	field(OSV, "MAJOR")
	field(FLNK,"$(KitName):$(MotorName)_MTRSTOP_SP")
}

record(ao,"$(KitName):$(MotorName)_ON_SP")
{
	field(DESC,"Motor on sp")
	field(DTYP,"G21X3")
	field(OMSL,"closed_loop")
	field(DOL, "$(KitName):$(MotorName)_ON_CMD")
        field(OUT, "#C$(C) S$(S) @MTRON")
}

record(bo,"$(KitName):$(MotorName)_ON_CMD")
{
	field(DESC,"Motor Stop Mode")
	field(VAL, "1")
	field(PINI,"YES")
	field(ZNAM,"Off")
	field(ZSV, "MINOR")
	field(ONAM,"On")
	field(OSV, "NO_ALARM")
	field(FLNK,"$(KitName):$(MotorName)_ON_SP")
}

record(ao,"$(KitName):$(MotorName)_STEPSMOOTH_SP")
{
	field(DESC,"Step smooth sp")
	field(DTYP,"G21X3")
	field(PINI,"YES")
	field(VAL, "$(STEPSMOOTH)")
	field(DRVL,"0.5")
	field(DRVH,"16.0")
	field(PREC,"$(PREC)")
        field(OUT, "#C$(C) S$(S) @STEPSMOOTH")
	field(FLNK,"$(KitName):$(MotorName)_STEPSMOOTH_MONITOR")
}

record(ao,"$(KitName):$(MotorName)_POSMAXERR_SP")
{
	field(DESC,"Pos main mxerr")
	field(DTYP,"G21X3")
	field(EGU, "$(EGU)")
	field(PINI,"YES")
	field(VAL, "$(MXERR)")
	field(PREC,"$(PREC)")
        field(OUT, "#C$(C) S$(S) @POSMAXERR")
	field(FLNK,"$(KitName):$(MotorName)_POSMAXERR_MONITOR")
}

record(ao,"$(KitName):$(MotorName)_POSMINERR_SP")
{
	field(DESC,"Pos main mnerr")
	field(DTYP,"G21X3")
	field(PINI,"YES")
	field(EGU, "$(EGU)")
	field(VAL, "$(MNERR)")
	field(PREC,"$(PREC)")
        field(OUT, "#C$(C) S$(S) @POSMINERR")
	field(FLNK,"$(KitName):$(MotorName)_POSMINERR_MONITOR")
}

#end
