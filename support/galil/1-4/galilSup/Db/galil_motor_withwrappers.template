# $File: //ASP/Dev/SBS/4_Controls/4_3_Network_Infrastructure/4_3_1_Comms_Common_Services/sw/device_drivers/Galil/1-4/galilSup/Db/galil_motor_withwrappers.template $
# $Revision: #5 $
# $DateTime: 2011/07/13 13:27:29 $
# $Author: cliftm $
#
# Description
# Template file for motor records, and supporting wrapper records
#
# Copyright (c) 2006  Australian Synchrotron
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# Licence as published by the Free Software Foundation; either
# version 2.1 of the Licence, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public Licence for more details.
#
# You should have received a copy of the GNU Lesser General Public
# Licence along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Contact details:
# mark.clift@synchrotron.vic.gov.au
# 800 Blackburn Road, Clayton, Victoria 3168, Australia.
#

grecord(motor,"$(KitName):$(MotorName)")
{
	field(DTYP,"G21X3")
	field(VMAX,"$(VMAX)")
	field(VBAS,"0")
	field(VELO,"$(VELO)")
	field(ACCL,"$(ACCL)")
	field(BDST,"$(BDST)")
	field(BVEL,"$(BVEL)")
	field(BACC,"$(BACC)")
	field(HVEL,"$(VELO)")
	field(OUT,"#C$(C) S$(S) @")
	field(MRES,"$(MRES)")
	field(ERES,"$(ERES)")
	field(PREC,"$(PREC)")
	field(EGU,"$(EGU)")
	field(DHLM,"$(DHLM)")
	field(DLLM,"$(DLLM)")
	field(UEIP,"$(UEIP)")
        field(SREV,"$(SREV)")
	field(OFF,"$(OFF)")
	field(RLNK,"$(KitName):$(MotorName)_MONITOR_FANOUT.PROC")
	field(RTRY,"$(RTRY)")
	field(TWV,"1")
	field(DESC,"$(DESC)")
	field(SCAN,"$(SCAN)")
	field(FOFF,"1")
# PID gains
	field(PCOF,"$(PCOF)")
	field(ICOF,"$(ICOF)")
	field(DCOF,"$(DCOF)")
}

record(transform,"$(KitName):$(MotorName)_ableput") {
  field(CLCB,"a")
  field(CLCC,"a")
  field(OUTA,"$(KitName):$(MotorName).DISA NPP NMS")
  field(OUTB,"$(KitName):$(MotorName).DISP NPP NMS")
  field(OUTC,"$(KitName):$(MotorName).DISA NPP NMS")
}

record(bo,"$(KitName):$(MotorName)_able") {
  field(DESC,"motor enable")
  field(PINI,"YES")
  field(OUT,"$(KitName):$(MotorName)_ableput.A PP MS")
  field(ZNAM,"Enable")
  field(ONAM,"Disable")
}

# All the below records connect to the above motorrecord.

#Input Records

record(fanout,"$(KitName):$(MotorName)_MONITOR_FANOUT")
{
	field(LNK1,"$(KitName):$(MotorName)_READBACK_MONITOR")
	field(LNK2,"$(KitName):$(MotorName)_MSTA_MONITOR")
	field(LNK3,"$(RLNK)")
	field(SELM,"All")
}

record(fanout,"$(KitName):$(MotorName)_MONITOR_FANOUT2")
{
	field(LNK1,"$(KitName):$(MotorName)_DIR_STATUS")
	field(LNK2,"$(KitName):$(MotorName)_DONE_STATUS")
	field(LNK3,"$(KitName):$(MotorName)_FL_STATUS")
	field(LNK4,"$(KitName):$(MotorName)_HMESW_STATUS")
	field(LNK5,"$(KitName):$(MotorName)_CLP_STATUS")
	field(LNK6,"$(KitName):$(MotorName)_MONITOR_FANOUT3")
	field(SELM,"All")
}

record(fanout,"$(KitName):$(MotorName)_MONITOR_FANOUT3")
{
	field(LNK1,"$(KitName):$(MotorName)_ATHME_STATUS")
	field(LNK2,"$(KitName):$(MotorName)_ENCP_STATUS")
	field(LNK3,"$(KitName):$(MotorName)_PROB_STATUS")
	field(LNK4,"$(KitName):$(MotorName)_MOVN_STATUS")
	field(LNK5,"$(KitName):$(MotorName)_GAINSUP_STATUS")
	field(LNK6,"$(KitName):$(MotorName)_MONITOR_FANOUT4")
	field(SELM,"All")
}

record(fanout,"$(KitName):$(MotorName)_MONITOR_FANOUT4")
{
	field(LNK1,"$(KitName):$(MotorName)_COMMERR_STATUS")
	field(LNK2,"$(KitName):$(MotorName)_RL_STATUS")
	field(SELM,"All")
}

record(ai,"$(KitName):$(MotorName)_READBACK_MONITOR")
{
	field(INP,"$(KitName):$(MotorName).$(READBACK)")
	field(EGU,"mm")
	field(PREC,"5")
	field(ADEL,"0.001")
	field(MDEL,"0.0")

	# Forward link to "external processing"
	# e.g. IVU gap monitoring
	#
	field(FLNK,"$(FLNK)")
	field(PINI,"YES")
}

record(mbbiDirect,"$(KitName):$(MotorName)_MSTA_MONITOR")
{
	field(INP,"$(KitName):$(MotorName).MSTA")
	field(PINI,"YES")
	field(FLNK,"$(KitName):$(MotorName)_MONITOR_FANOUT2")
}

record(bi,"$(KitName):$(MotorName)_DIR_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B0")
	field(ZNAM,"Negative Direction")
	field(ONAM,"Positive Direction")
	field(DESC,"Direction Status")
}

record(bi,"$(KitName):$(MotorName)_DONE_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B1")
	field(ZNAM,"Not Done")
	field(ONAM,"Done")
	field(ZSV,"MINOR")
	field(OSV,"NO_ALARM")
	field(DESC,"Done Status")
}

record(bi,"$(KitName):$(MotorName)_FL_STATUS")
{

#!! archive ! redhat ! CR01ARC01 ! idc ! monitor ! 1.0

	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B2")
	field(ZNAM,"Not Active")
	field(ONAM,"Active")
	field(ZSV,"NO_ALARM")
	field(OSV,"MAJOR")
	field(DESC,"Forward Limit Status")
	field(FLNK,"$(LIMITFLNK)")
}

record(bi,"$(KitName):$(MotorName)_HMESW_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B3")
	field(ZNAM,"Not Active")
	field(ONAM,"Active")
	field(ZSV,"NO_ALARM")
	field(OSV,"MINOR")
	field(DESC,"Home Switch Status")
}

record(bi,"$(KitName):$(MotorName)_CLP_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B5")
	field(ZNAM,"Not in Closed Loop")
	field(ONAM,"In Closed Loop Mode")
	field(DESC,"Closed Loop Status")
}

record(bi,"$(KitName):$(MotorName)_ATHME_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B7")
	field(ZNAM,"Not At Home")
	field(ONAM,"At Home")
	field(DESC,"At Home Status")
}

record(bi,"$(KitName):$(MotorName)_ENCP_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B8")
	field(ZNAM,"No")
	field(ONAM,"Yes")
	field(DESC,"Encoder Present")
}

record(bi,"$(KitName):$(MotorName)_PROB_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.B9")
	field(ZNAM,"No")
	field(ONAM,"Yes")
	field(ZSV,"NO_ALARM")
	field(OSV,"MAJOR")
	field(DESC,"Problem Status")
}

record(bi,"$(KitName):$(MotorName)_MOVN_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.BA")
	field(ZNAM,"Not Moving")
	field(ONAM,"Moving")
	field(ZSV,"NO_ALARM")
	field(OSV,"MINOR")
	field(DESC,"Moving Status")
	field(FLNK,"$(MOVNFLNK)")
}

record(bi,"$(KitName):$(MotorName)_GAINSUP_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.BB")
	field(ZNAM,"No")
	field(ONAM,"Yes")
	field(DESC,"Gain Supported Status")
}

record(bi,"$(KitName):$(MotorName)_COMMERR_STATUS")
{
	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.BC")
	field(ZNAM,"Comms Healthy")
	field(ONAM,"Comms Error")
	field(ZSV,"NO_ALARM")
	field(OSV,"MAJOR")
	field(DESC,"Comms Error Status")
}

record(bi,"$(KitName):$(MotorName)_RL_STATUS")
{

#!! archive ! redhat ! CR01ARC01 ! idc ! monitor ! 1.0

	field(INP,"$(KitName):$(MotorName)_MSTA_MONITOR.BD")
	field(ZNAM,"Not Active")
	field(ONAM,"Active")
	field(ZSV,"NO_ALARM")
	field(OSV,"MAJOR")
	field(DESC,"Reverse Limit Status")
	field(FLNK,"$(LIMITFLNK)")
}

# end
