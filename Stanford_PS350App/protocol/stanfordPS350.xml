<?xml version="1.0" encoding="UTF-8"?>
<lvinput>
   <!--
        the exint Vi is an ISIS Vi that is used as a proxy Vi for "set" operations when extint="true" is specified below.
		If your labview front panels are not "labview event driven" then you do not need to worry about this.
		If, however, they are (i.e. you would require the "signalling" version of the setControlValue() method) then contact
		ISIS computing group
		
		path is parsed using EPICS macEnvExpand() and so can contain epics environment variables
   -->
   <extint path="c:/LabVIEW Modules/Common/External Interface/External Interface.llb/External Interface - Set Value.vi" />
   
   <!-- this will be mapped (via lvDCOMConfigure()) to an asyn driver port name that can then be specified in an epics record -->
   <section name="frontpanel"> 

    <!-- path to LabVIEW vi file we are using, which is parsed using EPICS macEnvExpand() and so can contain epics environment variables -->
    <vi path="C:/LabVIEW Modules/Drivers/Stanford PS350/Stanford PS350 - System Functions.llb/Stanford PS350 - Front Panel.vi"> 

	<!--
	      <param> defines as asyn driver parameter that can be specified in an epics record to access data on the labview Vi. The <set>
                  and <read> items specify the name of the appropriate control/indicator on the LabVIEW Vi to access for these
                  operations. The "method" attribute controls the underlying method by which the new value is communicated, 
				  currently only "GCV" for reads (use DCOM exposed getControlValue()) and "SCV" for sets (use DCOM exposed setControlValue()) 
				  are supported. The meaning and use of the extint attribute has been covered earlier.
	  -->
	  <param name="voltage_rb" type="float64"> 
        <read method="GCV" target="Voltage (V)" />  
	  </param>
      
       <param name="current_rb" type="float64"> 
        <read method="GCV" target="Current (mA)" />  
	  </param>
      
        <param name="setpoint" type="float64"> 
        <read method="GCV" target="Setpoint (V)" /> 
        <set method="SCV" extint="true" target="New Setpoint (V)"  post_button="Set Voltage" /> 
	  </param>
      
        <param name="v_limit" type="float64"> 
        <read method="GCV" target="V Limit (V)" /> 
        <set method="SCV" extint="true" target="VLIM Setpoint" post_button="Set VLim" /> 
	  </param>
      
      <param name="v_limit_sp" type="float64"> 
        <read method="GCV" target="VLIM Setpoint" /> 
	  </param>
      
       <param name="i_limit" type="float64"> 
        <read method="GCV" target="I Limit (mA)" /> 
        <set method="SCV" extint="true" target="ILIM Setpoint"  post_button="Set ILim" /> 
	  </param>
      
      <param name="i_limit_sp" type="float64"> 
        <read method="GCV" target="ILIM Setpoint" /> 
	  </param>
      
      <param name="i_trip" type="float64"> 
        <read method="GCV" target="I Trip (mA)" /> 
        <set method="SCV" extint="true" target="ITRP Setpoint" post_button="Set ITRP" /> 
	  </param>
      
      <param name="i_trip_sp" type="float64"> 
        <read method="GCV" target="ITRP Setpoint" /> 
	  </param>
	
      <param name="hv_on_rb" type="int32"> 
        <read method="GCV" target="HV ON" />
      </param>
      
      <param name="toggle_hv" type="int32"> 
        <read method="GCV" target="HV ON" />
        <set method="SCV" extint="true" target="HV ON/OFF" /> 
      </param>
      
      <param name="toggle_hv_sp" type="int32"> 
        <read method="GCV" target="HV ON/OFF" />
      </param>

      
	</vi>
	 
  </section>
  
</lvinput>
